# cb_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:///tmp/uwsgi_bridge_controller.sock; # for a file socket
    #server 127.0.0.1:8080; # for a web port socket (we'll use this first)
}

upstream portal_socket_io {
    server 127.0.0.1:9415;
}

# For the websocket upgrade
#map $http_upgrade $connection_upgrade {
#    default upgrade;
#    '' close;
#}

upstream bridge_socket {
    server 127.0.0.1:9417;
}

upstream client_socket {
    server 127.0.0.1:7522;
}

# configuration of the ssl server
server {
    # the port your site will be served on
    listen      443;
    # the domain name it will serve for
    server_name staging.continuumbridge.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    ssl    on;
    ssl_certificate    /home/ubuntu/ssl/bundle.crt;
    ssl_certificate_key    /home/ubuntu/ssl/ContinuumBridge.key;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    #merge_slashes off;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /home/ubuntu/bridge-controller/media;  # your Django project's media files - amend as required
    }
    
    #For portal sockets
    location /sockets/portal/ {
        #Configure proxy to pass data to upstream node1
        proxy_pass http://portal_socket_io/socket.io/;
        #HTTP version 1.1 is needed for sockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /sockets/bridge/ {
        #Configure proxy to pass data to upstream node bridge socket
        proxy_pass http://bridge_socket/;
        #HTTP version 1.1 is needed for sockets
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /sockets/client/ {
        #Configure proxy to pass data to upstream node client socket
        proxy_pass http://client_socket/;
        #HTTP version 1.1 is needed for sockets
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


    location /static {
        alias /home/ubuntu/bridge-controller/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/ubuntu/bridge-controller/server_files/nginx_wsgi_params; # the uwsgi_params file you installed
    }
}

server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name _; # substitute your machine's IP address or FQDN
    charset     utf-8;

    #return      301 https://$server_name$request_uri;
    #return      301 https://$host/;
    #merge_slashes off;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /home/ubuntu/bridge-controller/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/ubuntu/bridge-controller/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/ubuntu/bridge-controller/server_files/nginx_wsgi_params;
    }
}
